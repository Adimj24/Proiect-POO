#include <iostream>

using namespace std;

Matrix Matrix:: operator +(Matrix b)
{
    int i,j;
    Matrix suma;

    //alocare dinamica matrice rezultat pe care o vom salva in campul privat de tip matrice din variabila de tip Matrix
    float** ary = new float*[nr];
    for(i = 0; i < nr ; i++)
    ary[i] = new float[nr];

    for( i=0;i<nr;i++)
		for( j=0;j<nr;j++)
			ary[i][j]=v[i][j]+b.v[i][j];

    suma.nr=nr;
    suma.v=ary;
    return suma;
}


Matrix Matrix:: inmultire(Matrix b)
{
    int i,j,k;
    Matrix prod;

   //alocam dinamic matricea rezultat ce contine inmultirea celor 2 matrice
    float** ary = new float*[nr];
    for(i = 0; i < nr ; i++)
    ary[i] = new float[nr];

    //initializam toate elem cu 0
    for (i=0 ; i<nr ; i++)
      for (j=0 ; j<nr ; j++)
      ary[i][j]=0;

    for (i=0 ; i<nr ; i++)
        for (j=0 ; j<nr ; j++)
          for (k=0 ; k<nr ; k++)
          ary[i][j] += v[i][k]*b.v[i][k];


    prod.nr=nr;
    prod.v=ary;
    return prod;
}

