#include <iostream>

using namespace std;

class Matrix{   //Clasa matrice

private:

    int nr;
    float **v;

public:

    void initializare(); //Metoda pt initializarea unei matrice
    void afisare();     //Metoda pt afisarea unei matrice
    Matrix operator +(Matrix);
    Matrix inmultire(Matrix);
    Matrix putere(int);


};

void Matrix:: afisare()
{
    int i,j;

    cout<<"Matricea rezultata:"<<'\n';

       for( i=0 ; i<nr ; i++ )
         {
            for( j=0 ; j<nr ; j++ )
                 cout<< v[i][j] <<"  ";
            cout<< '\n';
         }
}

void Matrix:: initializare()
    {
       int i,j,m,n;

          cout<<"introduceti numarul de linii/coloane: "<<'\n';
          cin>>m;
          cin>>n;
          if(m!=n)
          {
              cout<<"Matrice nepatratica!";
              return;
          }

          nr=n;
        //alocarea dinamica ptr matricea nou citita
         float** ary = new float*[nr];
         for(i = 0; i < nr ; i++)
         ary[i] = new float[nr];

        cout<<"introduceti valorile matricei de la tastura: "<<'\n';
        //citirea valorilor de la tastatura
         for( i=0 ; i<nr ; i++ )
            for( j=0 ; j<nr ; j++ )
              cin >> ary[i][j];

        //initializarea matricei din partea privata cu cea citita de la tastatura
          v=ary;
}

Matrix Matrix:: operator +(Matrix b)
{
    int i,j;
    Matrix suma;

    //alocare dinamica matrice rezultat pe care o vom salva in campul privat de tip matrice din variabila de tip Matrix
    float** ary = new float*[nr];
    for(i = 0; i < nr ; i++)
    ary[i] = new float[nr];

    for( i=0;i<nr;i++)
		for( j=0;j<nr;j++)
			ary[i][j]=v[i][j]+b.v[i][j];

    suma.nr=nr;
    suma.v=ary;
    return suma;
}


Matrix Matrix:: inmultire(Matrix b)
{
    int i,j,k;
    Matrix prod;

   //se face alocarea dinamica pentru matricea rezultat (matricea ce contine rezultatul inmultirii celor 2 matrice)
    float** ary = new float*[nr];
    for(i = 0; i < nr ; i++)
    ary[i] = new float[nr];

    // se initializeaza toate elementele cu 0
    for (i=0 ; i<nr ; i++)
      for (j=0 ; j<nr ; j++)
      ary[i][j]=0;

    for (i=0 ; i<nr ; i++)
        for (j=0 ; j<nr ; j++)
          for (k=0 ; k<nr ; k++)
          ary[i][j] += v[i][k]*b.v[i][k];


    prod.nr=nr;
    prod.v=ary;
    return prod;
}

Matrix Matrix:: putere(int n)
{
    Matrix pow,copie;
    int i;

    copie.v=v;

    pow.v=v;
    pow.nr=nr;

    for(i=0 ; i<n-1 ; i++)
        pow = pow.inmultire(copie);

    return pow;
}


int main()
{
        Matrix a,b,sum,prod,pow;
        int numar;

        a.initializare();
        a.afisare();
        b.initializare();
        b.afisare();

        //suma matricelor a si b
        sum=a+b;
        sum.afisare();

        //produsul lui a cu b
        prod=a.inmultire(b);
        prod.afisare();

        //ridicarea la puterea "numar" a matricei a
        cout<<"Introduceti puterea la care doriti a ridica prima matrice:";
        cin>>numar;
        pow=a.putere(numar);
        pow.afisare();


    return 0;
}

